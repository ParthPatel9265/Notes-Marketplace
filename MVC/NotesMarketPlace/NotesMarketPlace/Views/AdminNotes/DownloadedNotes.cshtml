@using PagedList;
@using PagedList.Mvc;
@model IPagedList<NotesMarketPlace.Models.DownloadedNotes>
@{
    ViewBag.Title = "Downloaded Notes";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<!-- downloaded notes-->
<section id="publish-notes" class="mydownloads">
    <div class="container">
        <div class="row">
            <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                <h3>Downloaded Notes</h3>
            </div>
        </div>


        @using (Html.BeginForm("DownloadedNotes", "AdminNotes", FormMethod.Get))
        {

            <input value="@ViewBag.NoteID" name="noteid" hidden>
            <input value="@ViewBag.Member" name="member" hidden>
            <div class="row top-table">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                    <div class="row">
                        <div class="col-4 col-xs-12">
                            <p class="seller-word text-left">Notes</p>
                            @Html.DropDownList("note", new SelectList(@ViewBag.NoteList, "Value", "Text", @ViewBag.Note), "Select Note", new { @class = "form-control selectfield seller-name1", id = "downloadednotes-note" })

                        </div>


                        <div class="col-4 col-xs-12">
                            <p class="seller-word text-left">Seller</p>
                            @Html.DropDownList("seller", new SelectList(@ViewBag.SellerList, "Value", "Text", @ViewBag.Seller), "Select Seller", new { @class = "form-control selectfield seller-name1", id = "downloadednotes-seller" })

                        </div>

                        <div class="col-4 col-xs-12">
                            <p class="seller-word text-left">Buyer</p>
                            @Html.DropDownList("buyer", new SelectList(@ViewBag.BuyerList, "Value", "Text", @ViewBag.Buyer), "Select buyer", new { @class = "form-control selectfield seller-name1", id = "downloadednotes-buyer" })

                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                    <div class="row justify-content-end extra-margin1">
                        <div class="hidepassword seller-search">
                            <img src="~/Content/Admin/img/Dashboard/search.jpg" class="searchimage doup">
                            <input type="search" name="search" value="@ViewBag.Search" class="form-control search-bar exampleInputEmail1" placeholder="Search">
                        </div>
                        <div class="btn-merge seller-search">
                            <button type="submit" class="btn text-uppercase text-center" id="btn"><b>Search</b></button>
                        </div>
                    </div>
                </div>
            </div>

        }
        <div class="row">
            <div class="col-md-12">
                <div class="grid-table table-responsive-xl">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col" class="align-middle text-center">SR NO.</th>

                                <th scope="col" class="align-middle">@Html.ActionLink("NOTE TITLE", "DownloadedNotes", new {sort = ViewBag.Sort == null ? "Title_Desc" : (ViewBag.Sort == "Title_Asc" ? "Title_Desc" : "Title_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer})</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("CATEGORY", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Category_Desc" : (ViewBag.Sort == "Category_Asc" ? "Category_Desc" : "Category_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer})</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("BUYER", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Buyer_Desc" : (ViewBag.Sort == "Buyer_Asc" ? "Buyer_Desc" : "Buyer_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer })</th>

                                <th scope="col" class="align-middle">@Html.ActionLink("SELLER", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Seller_Desc" : (ViewBag.Sort == "Seller_Asc" ? "Seller_Desc" : "Seller_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer })</th>

                                <th scope="col" class="align-middle">@Html.ActionLink("SELL TYPE", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "SellType_Desc" : (ViewBag.Sort == "SellType_Asc" ? "SellType_Desc" : "SellType_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer})</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("PRICE", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Price_Desc" : (ViewBag.Sort == "Price_Asc" ? "Price_Desc" : "Price_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer })</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("DOWNLOADED DATE/TIME", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "DownloadedDate_Asc" : (ViewBag.Sort == "DownloadedDate_Desc" ? "DownloadedDate_Asc" : "DownloadedDate_Desc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer})</th>
                                <th scope="col" class="align-middle"></th>
                                <th scope="col" class="align-middle"></th>
                            </tr>

                        </thead>
                        <tbody>
                            @if (Model.Count() == 0)
                            {
                                <tr class="no-record">
                                    <td colspan="10" class="text-center">No Record Found</td>
                                </tr>
                            }
                            else
                            {
                                int srno = 0;
                                if (ViewBag.PageNumber == null)
                                {
                                    srno = 0;
                                }
                                else
                                {
                                    srno = (ViewBag.Pagenumber - 1) * 5;
                                }
                                foreach (var item in Model)
                                {

                                    <tr>
                                        @{ srno = srno + 1; }
                                        <td class="align-middle text-center">@srno</td>
                                        <td class="align-middle changecolor"><a href="@Url.Action("NoteDetail", "Admin", new { noteid = @item.NoteID })">@item.Title</a></td>
                                        <td class="align-middle">@item.Category</td>

                                        <td class="align-middle">@item.Buyer <i class="icon-margin"><a href="@Url.Action("MemberDetail", "AdminMembers", new { member = @item.BuyerID })"><img src="~/Content/Admin/img/images/eye.png"></a></i></td>
                                        <td class="align-middle">@item.Seller <i class="icon-margin"><a href="@Url.Action("MemberDetail", "AdminMembers", new { member = @item.SellerID })"><img src="~/Content/Admin/img/images/eye.png"></a></i></td>
                                        <td class="align-middle">@item.SellType</td>
                                        <td class="align-middle">$@item.Price</td>
                                        <td class="align-middle">@item.DownloadedDate.ToString("dd-MM-yyyy, hh:mm")</td>

                                        <td class="align-middle">
                                            <div class="dropdown">
                                                <a type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <img src="~/Content/Admin/img/images/dots.png">
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                    <a class="dropdown-item" href="@Url.Action("AdminDownloadNote", "Admin", new { noteid = @item.NoteID })">Download Notes</a>
                                                    <a class="dropdown-item" href="@Url.Action("NoteDetail", "Admin", new { noteid = @item.NoteID })">View More Detail</a>


                                                </div>
                                            </div>



                                        </td>
                                        <td></td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </div>
</section>
<!-- downloaded note ends -->
<!-- Pagination -->
<nav>
    <div class="container">
        <div class="row justify-content-center">


            @Html.PagedListPager(Model, page => Url.Action("DownloadedNotes", new { page, search = @ViewBag.Search, sort = @ViewBag.Sort }), new PagedList.Mvc.PagedListRenderOptions
       {
          
           LinkToNextPageFormat = ">",
           LinkToPreviousPageFormat = "<",
           MaximumPageNumbersToDisplay = 5,
           DisplayEllipsesWhenNotShowingAllPageNumbers = false,
           DisplayLinkToFirstPage = PagedListDisplayMode.Never,
           DisplayLinkToLastPage = PagedListDisplayMode.Never

       })
        </div>
    </div>

</nav>
<!-- Pagination Ends -->