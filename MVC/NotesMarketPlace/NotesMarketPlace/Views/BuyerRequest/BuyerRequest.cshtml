@using PagedList;
@using PagedList.Mvc;

@model IPagedList<NotesMarketPlace.Models.BuyerRequest>

@{
    ViewBag.Title = "Buyer Requests";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<!--buyer request -->
<section id="publish-notes" class="mydownloads">
    <div class="container">
        @using (Html.BeginForm("BuyerRequest", "BuyerRequest", FormMethod.Get))
        {
            <div class="row top-table">
                <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                    <h3 class="col-left">Buyer Requests</h3>
                </div>
                <div class="col-12 col-sm-12 col-md-12 col-lg-6 extra-margin">
                    <div class="row justify-content-end">
                        <div class="hidepassword">
                            <img src="~/Content/Front/img/Dashboard/search.jpg" class="searchimage doup">
                            <input type="email" class="form-control search-bar exampleInputEmail1" value="@ViewBag.Search" placeholder="Search">
                        </div>
                        <div class="btn-merge">
                            <button type="submit" class="btn text-uppercase text-center" id="btn"><b>Search</b></button>
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="row">
            <div class="col-md-12">
                <div class="grid-table table-responsive-xl">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col" class="align-middle text-center">SR NO.</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("NOTE TITLE", "BuyerRequest", new { sort = ViewBag.Sort == null ? "Title_Desc" : (ViewBag.Sort == "Title_Asc" ? "Title_Desc" : "Title_Asc"), search = @ViewBag.Search })</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("CATEGORY", "BuyerRequest", new { sort = ViewBag.Sort == null ? "Category_Desc" : (ViewBag.Sort == "Category_Asc" ? "Category_Desc" : "Category_Asc"), search = @ViewBag.Search })</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("BUYER", "BuyerRequest", new { sort = ViewBag.Sort == null ? "Buyer_Desc" : (ViewBag.Sort == "Buyer_Asc" ? "Buyer_Desc" : "Buyer_Asc"), search = @ViewBag.Search})</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("PHONE NO.", "BuyerRequest", new { sort = ViewBag.Sort == null ? "Phone_Desc" : (ViewBag.Sort == "Phone_Asc" ? "Phone_Desc" : "Phone_Asc"), search = @ViewBag.Search})</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("SELL TYPE", "BuyerRequest", new { sort = ViewBag.Sort == null ? "Type_Desc" : (ViewBag.Sort == "Type_Asc" ? "Type_Desc" : "Type_Asc"), search = @ViewBag.Search})</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("PRICE", "BuyerRequest", new { sort = ViewBag.Sort == null ? "Price_Desc" : (ViewBag.Sort == "Price_Asc" ? "Price_Desc" : "Price_Asc"), search = @ViewBag.Search })</th>
                                <th scope="col" class="align-middle">@Html.ActionLink("DOWNLOADED DATE/TIME", "BuyerRequest", new { sort = ViewBag.Sort == null ? "DownloadedDate_Asc" : (ViewBag.Sort == "DownloadedDate_Desc" ? "DownloadedDate_Asc" : "DownloadedDate_Desc"), search = @ViewBag.Search})</th>
                                <th scope="col" class="align-middle"></th>
                                <th scope="col" class="align-middle"></th>
                                <th scope="col" class="align-middle"></th>

                            </tr>
                        </thead>
                        <tbody>

                            @if (Model.Count() == 0)
                            {
                                <tr>
                                    <td colspan="11" class="text-center align-middle">No Record Found</td>
                                </tr>
                            }
                            else
                            {

                                   
                                    int srno = 0;
                                    foreach (var item in Model)
                                    {
                                    <tr>
                                        @{ srno = srno + 1; }
                                        <td class="align-middle text-center">@srno</td>
                                        <td class="align-middle change-color"><a href="@Url.Action("Notes", "SearchNotes", new { id = @item.NoteID })">@item.Title</a></td>
                                        <td class="align-middle">@item.Category</td>
                                        <td class="align-middle">@item.Buyer</td>
                                        <td class="align-middle">@item.PhoneNo</td>
                                        <td class="align-middle">@item.SellType</td>

                                        @if (@item.SellingPrice != null)
                                        {
                                            <td class="align-middle">$@item.SellingPrice</td>
                                        }
                                        else
                                        {

                                            <td class="align-middle">$0</td>
                                        }
                                        <td class="align-middle">@item.DownloadedDate.Value.ToString("dd MMM yyyy hh:mm:ss")</td>


                                        <td class="align-middle">
                                            <a href="@Url.Action("NoteDetail", "SearchNotes", new { id = @item.NoteID } )"><img src="~/Content/Front/img/Dashboard/eye.png" alt="view"></a>
                                        </td>
                                        <td class="align-middle">
                                            <div class="dropdown">
                                                <a type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="fa fa-ellipsis-v  "></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                    <a class="dropdown-item" href="@Url.Action("AllowDownload", new { id = @item.DownloadID })" type="button">Allow Download</a>
                                                </div>
                                            </div>
                                        </td>
                                        <td></td>

                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </div>
</section>
<!-- buyer request ends -->
<!-- Pagination -->
<nav>
    <div class="container">
    <div class="row justify-content-center">

    
            @Html.PagedListPager(Model, page => Url.Action("BuyerRequest", new { page, search = @ViewBag.Search, sort = @ViewBag.Sort }), new PagedList.Mvc.PagedListRenderOptions
       {

           LinkToNextPageFormat = ">",
           LinkToPreviousPageFormat = "<",
           DisplayEllipsesWhenNotShowingAllPageNumbers = true,
           DisplayLinkToFirstPage = PagedListDisplayMode.Never,
           DisplayLinkToLastPage = PagedListDisplayMode.Never

       })
        </div>

    </div>
</nav>

